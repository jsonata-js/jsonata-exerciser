{"version":3,"sources":["../node_modules/monaco-editor/esm/vs/language/json/workerManager.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-languageserver-types/main.js","../node_modules/monaco-editor/esm/vs/language/json/languageFeatures.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/scanner.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/main.js","../node_modules/monaco-editor/esm/vs/language/json/tokenization.js","../node_modules/monaco-editor/esm/vs/language/json/jsonMode.js"],"names":["Position","Range","Location","Color","ColorInformation","ColorPresentation","FoldingRangeKind","FoldingRange","DiagnosticRelatedInformation","DiagnosticSeverity","Diagnostic","Command","TextEdit","TextDocumentEdit","WorkspaceEdit","WorkerManager","defaults","_this","this","_defaults","_worker","_idleCheckInterval","setInterval","_checkIfIdle","_lastUsedTime","_configChangeListener","onDidChange","_stopWorker","prototype","dispose","_client","clearInterval","Date","now","_getClient","monaco","editor","createWebWorker","moduleId","label","languageId","createData","languageSettings","diagnosticsOptions","enableSchemaRequest","getProxy","getLanguageServiceWorker","resources","_i","arguments","length","then","client","_","withSyncedResources","create","line","character","is","value","candidate","Is","objectLiteral","number","one","two","three","four","start","end","Error","uri","range","defined","string","undefined","red","green","blue","alpha","color","textEdit","additionalTextEdits","typedArray","startLine","endLine","startCharacter","endCharacter","kind","result","location","message","Warning","Information","Hint","severity","code","source","relatedInformation","title","command","args","replace","newText","insert","position","del","textDocument","edits","VersionedTextDocumentIdentifier","Array","isArray","changes","documentChanges","TextDocumentIdentifier","TextDocumentItem","MarkupKind","MarkupContent","CompletionItemKind","InsertTextFormat","CompletionItem","CompletionList","MarkedString","Hover","ParameterInformation","SignatureInformation","DocumentHighlightKind","DocumentHighlight","SymbolKind","SymbolInformation","TextEditChangeImpl","push","delete","add","edit","all","clear","splice","WorkspaceChange","workspaceEdit","_textEditChanges","Object","_workspaceEdit","forEach","textDocumentEdit","textEditChange","keys","key","defineProperty","get","enumerable","configurable","getTextEditChange","version","text","PlainText","Markdown","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","File","Reference","Folder","EnumMember","Constant","Struct","Event","Operator","TypeParameter","items","isIncomplete","fromPlainText","plainText","language","contents","documentation","parameters","Read","Write","Namespace","Package","String","Number","Boolean","Key","Null","name","containerName","CodeActionKind","CodeActionContext","CodeAction","CodeLens","FormattingOptions","DocumentSymbol","detail","selectionRange","children","deprecated","boolean","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","diagnostics","only","commandOrEdit","data","tabSize","insertSpaces","DocumentLink","target","TextDocument","TextDocumentSaveReason","content","FullTextDocument","lineCount","func","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","mergeSort","compare","p","left","slice","right","leftIdx","rightIdx","i","ret","a","b","diff","lastModifiedOffset","e","startOffset","endOffset","substring","Manual","AfterDelay","FocusOut","_uri","_languageId","_version","_content","_lineOffsets","update","event","getLineOffsets","lineOffsets","isLineStart","ch","charAt","offset","Math","max","min","low","high","mid","floor","lineOffset","nextLineOffset","toString","call","check","every","Uri","languageFeatures_Range","DiagnosticsAdapter","_disposables","_listener","onModelAdd","model","handle","modeId","getModeId","onDidChangeContent","clearTimeout","setTimeout","_doValidate","onModelRemoved","setModelMarkers","uriStr","listener","onDidCreateModel","onWillDisposeModel","_resetSchema","onDidChangeModelLanguage","getModels","d","resource","worker","resetSchema","doValidation","markers","map","diag","toSeverity","startLineNumber","startColumn","endLineNumber","endColumn","toDiagnostics","getModel","err","console","error","lsSeverity","MarkerSeverity","Info","fromPosition","column","lineNumber","fromRange","toRange","toCompletionItemKind","mItemKind","languages","toTextEdit","languageFeatures_CompletionAdapter","CompletionAdapter","provideCompletionItems","context","token","getWordUntilPosition","doComplete","info","entry","item","insertText","sortText","filterText","insertTextFormat","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","suggestions","toMarkdownString","thing","toMarkedStringArray","HoverAdapter","provideHover","doHover","toSymbolKind","mKind","DocumentSymbolAdapter","provideDocumentSymbols","findDocumentSymbols","fromFormattingOptions","options","DocumentFormattingEditProvider","provideDocumentFormattingEdits","format","DocumentRangeFormattingEditProvider","provideDocumentRangeFormattingEdits","DocumentColorAdapter","provideDocumentColors","findDocumentColors","infos","provideColorPresentations","getColorPresentations","presentations","presentation","FoldingRangeAdapter","provideFoldingRanges","ranges","Comment","Imports","Region","toFoldingRangeKind","createScanner","ignoreTrivia","pos","len","tokenOffset","scanError","scanHexDigits","count","exact","digits","charCodeAt","scanNext","isWhiteSpace","fromCharCode","isLineBreak","ch_1","scanString","commentClosed","isDigit","scanNumber","isUnknownContentCharacter","setPosition","newPosition","getPosition","scan","getToken","getTokenValue","getTokenOffset","getTokenLength","getTokenError","main_createScanner","createTokenizationSupport","supportComments","getInitialState","JSONState","tokenize","state","offsetDelta","stopAtOffset","comments","numberOfInsertedCharacters","adjustOffset","scanner","lastWasColon","tokens","endState","clone","type","substr","TOKEN_DELIM_OBJECT","TOKEN_DELIM_ARRAY","TOKEN_DELIM_COLON","TOKEN_DELIM_COMMA","TOKEN_VALUE_BOOLEAN","TOKEN_VALUE_NULL","TOKEN_VALUE_STRING","TOKEN_PROPERTY_NAME","TOKEN_VALUE_NUMBER","TOKEN_COMMENT_LINE","TOKEN_COMMENT_BLOCK","getStateData","startIndex","scopes","_tokenize","_state","equals","other","setStateData","setupMode","disposables","uris","apply","registerCompletionItemProvider","registerHoverProvider","registerDocumentSymbolProvider","registerDocumentFormattingEditProvider","registerDocumentRangeFormattingEditProvider","setTokensProvider","setLanguageConfiguration","richEditConfiguration","registerColorProvider","registerFoldingRangeProvider","__webpack_require__","__webpack_exports__","wordPattern","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn"],"mappings":"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","file":"static/js/3.8bbc23eb.chunk.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\nvar WorkerManager = /** @class */function () {\n  function WorkerManager(defaults) {\n    var _this = this;\n    this._defaults = defaults;\n    this._worker = null;\n    this._idleCheckInterval = setInterval(function () {\n      return _this._checkIfIdle();\n    }, 30 * 1000);\n    this._lastUsedTime = 0;\n    this._configChangeListener = this._defaults.onDidChange(function () {\n      return _this._stopWorker();\n    });\n  }\n  WorkerManager.prototype._stopWorker = function () {\n    if (this._worker) {\n      this._worker.dispose();\n      this._worker = null;\n    }\n    this._client = null;\n  };\n  WorkerManager.prototype.dispose = function () {\n    clearInterval(this._idleCheckInterval);\n    this._configChangeListener.dispose();\n    this._stopWorker();\n  };\n  WorkerManager.prototype._checkIfIdle = function () {\n    if (!this._worker) {\n      return;\n    }\n    var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\n    if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\n      this._stopWorker();\n    }\n  };\n  WorkerManager.prototype._getClient = function () {\n    this._lastUsedTime = Date.now();\n    if (!this._client) {\n      this._worker = monaco.editor.createWebWorker({\n        // module that exports the create() method and returns a `JSONWorker` instance\n        moduleId: 'vs/language/json/jsonWorker',\n        label: this._defaults.languageId,\n        // passed in to the create() method\n        createData: {\n          languageSettings: this._defaults.diagnosticsOptions,\n          languageId: this._defaults.languageId,\n          enableSchemaRequest: this._defaults.diagnosticsOptions.enableSchemaRequest\n        }\n      });\n      this._client = this._worker.getProxy();\n    }\n    return this._client;\n  };\n  WorkerManager.prototype.getLanguageServiceWorker = function () {\n    var _this = this;\n    var resources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      resources[_i] = arguments[_i];\n    }\n    var _client;\n    return this._getClient().then(function (client) {\n      _client = client;\n    }).then(function (_) {\n      return _this._worker.withSyncedResources(resources);\n    }).then(function (_) {\n      return _client;\n    });\n  };\n  return WorkerManager;\n}();\nexport { WorkerManager };","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\n\n/**\n * The Position namespace provides helper functions to work with\n * [Position](#Position) literals.\n */\nexport var Position;\n(function (Position) {\n  /**\n   * Creates a new Position literal from the given line and character.\n   * @param line The position's line.\n   * @param character The position's character.\n   */\n  function create(line, character) {\n    return {\n      line: line,\n      character: character\n    };\n  }\n  Position.create = create;\n  /**\n   * Checks whether the given liternal conforms to the [Position](#Position) interface.\n   */\n  function is(value) {\n    var candidate = value;\n    return Is.objectLiteral(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\n  }\n  Position.is = is;\n})(Position || (Position = {}));\n/**\n * The Range namespace provides helper functions to work with\n * [Range](#Range) literals.\n */\nexport var Range;\n(function (Range) {\n  function create(one, two, three, four) {\n    if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\n      return {\n        start: Position.create(one, two),\n        end: Position.create(three, four)\n      };\n    } else if (Position.is(one) && Position.is(two)) {\n      return {\n        start: one,\n        end: two\n      };\n    } else {\n      throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\n    }\n  }\n  Range.create = create;\n  /**\n   * Checks whether the given literal conforms to the [Range](#Range) interface.\n   */\n  function is(value) {\n    var candidate = value;\n    return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n  }\n  Range.is = is;\n})(Range || (Range = {}));\n/**\n * The Location namespace provides helper functions to work with\n * [Location](#Location) literals.\n */\nexport var Location;\n(function (Location) {\n  /**\n   * Creates a Location literal.\n   * @param uri The location's uri.\n   * @param range The location's range.\n   */\n  function create(uri, range) {\n    return {\n      uri: uri,\n      range: range\n    };\n  }\n  Location.create = create;\n  /**\n   * Checks whether the given literal conforms to the [Location](#Location) interface.\n   */\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n  }\n  Location.is = is;\n})(Location || (Location = {}));\n/**\n * The Color namespace provides helper functions to work with\n * [Color](#Color) literals.\n */\nexport var Color;\n(function (Color) {\n  /**\n   * Creates a new Color literal.\n   */\n  function create(red, green, blue, alpha) {\n    return {\n      red: red,\n      green: green,\n      blue: blue,\n      alpha: alpha\n    };\n  }\n  Color.create = create;\n  /**\n   * Checks whether the given literal conforms to the [Color](#Color) interface.\n   */\n  function is(value) {\n    var candidate = value;\n    return Is.number(candidate.red) && Is.number(candidate.green) && Is.number(candidate.blue) && Is.number(candidate.alpha);\n  }\n  Color.is = is;\n})(Color || (Color = {}));\n/**\n * The ColorInformation namespace provides helper functions to work with\n * [ColorInformation](#ColorInformation) literals.\n */\nexport var ColorInformation;\n(function (ColorInformation) {\n  /**\n   * Creates a new ColorInformation literal.\n   */\n  function create(range, color) {\n    return {\n      range: range,\n      color: color\n    };\n  }\n  ColorInformation.create = create;\n  /**\n   * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\n   */\n  function is(value) {\n    var candidate = value;\n    return Range.is(candidate.range) && Color.is(candidate.color);\n  }\n  ColorInformation.is = is;\n})(ColorInformation || (ColorInformation = {}));\n/**\n * The Color namespace provides helper functions to work with\n * [ColorPresentation](#ColorPresentation) literals.\n */\nexport var ColorPresentation;\n(function (ColorPresentation) {\n  /**\n   * Creates a new ColorInformation literal.\n   */\n  function create(label, textEdit, additionalTextEdits) {\n    return {\n      label: label,\n      textEdit: textEdit,\n      additionalTextEdits: additionalTextEdits\n    };\n  }\n  ColorPresentation.create = create;\n  /**\n   * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\n   */\n  function is(value) {\n    var candidate = value;\n    return Is.string(candidate.label) && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate)) && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\n  }\n  ColorPresentation.is = is;\n})(ColorPresentation || (ColorPresentation = {}));\n/**\n * Enum of known range kinds\n */\nexport var FoldingRangeKind;\n(function (FoldingRangeKind) {\n  /**\n   * Folding range for a comment\n   */\n  FoldingRangeKind[\"Comment\"] = \"comment\";\n  /**\n   * Folding range for a imports or includes\n   */\n  FoldingRangeKind[\"Imports\"] = \"imports\";\n  /**\n   * Folding range for a region (e.g. `#region`)\n   */\n  FoldingRangeKind[\"Region\"] = \"region\";\n})(FoldingRangeKind || (FoldingRangeKind = {}));\n/**\n * The folding range namespace provides helper functions to work with\n * [FoldingRange](#FoldingRange) literals.\n */\nexport var FoldingRange;\n(function (FoldingRange) {\n  /**\n   * Creates a new FoldingRange literal.\n   */\n  function create(startLine, endLine, startCharacter, endCharacter, kind) {\n    var result = {\n      startLine: startLine,\n      endLine: endLine\n    };\n    if (Is.defined(startCharacter)) {\n      result.startCharacter = startCharacter;\n    }\n    if (Is.defined(endCharacter)) {\n      result.endCharacter = endCharacter;\n    }\n    if (Is.defined(kind)) {\n      result.kind = kind;\n    }\n    return result;\n  }\n  FoldingRange.create = create;\n  /**\n   * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\n   */\n  function is(value) {\n    var candidate = value;\n    return Is.number(candidate.startLine) && Is.number(candidate.startLine) && (Is.undefined(candidate.startCharacter) || Is.number(candidate.startCharacter)) && (Is.undefined(candidate.endCharacter) || Is.number(candidate.endCharacter)) && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\n  }\n  FoldingRange.is = is;\n})(FoldingRange || (FoldingRange = {}));\n/**\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\n */\nexport var DiagnosticRelatedInformation;\n(function (DiagnosticRelatedInformation) {\n  /**\n   * Creates a new DiagnosticRelatedInformation literal.\n   */\n  function create(location, message) {\n    return {\n      location: location,\n      message: message\n    };\n  }\n  DiagnosticRelatedInformation.create = create;\n  /**\n   * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\n   */\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\n  }\n  DiagnosticRelatedInformation.is = is;\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\n/**\n * The diagnostic's severity.\n */\nexport var DiagnosticSeverity;\n(function (DiagnosticSeverity) {\n  /**\n   * Reports an error.\n   */\n  DiagnosticSeverity.Error = 1;\n  /**\n   * Reports a warning.\n   */\n  DiagnosticSeverity.Warning = 2;\n  /**\n   * Reports an information.\n   */\n  DiagnosticSeverity.Information = 3;\n  /**\n   * Reports a hint.\n   */\n  DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n/**\n * The Diagnostic namespace provides helper functions to work with\n * [Diagnostic](#Diagnostic) literals.\n */\nexport var Diagnostic;\n(function (Diagnostic) {\n  /**\n   * Creates a new Diagnostic literal.\n   */\n  function create(range, message, severity, code, source, relatedInformation) {\n    var result = {\n      range: range,\n      message: message\n    };\n    if (Is.defined(severity)) {\n      result.severity = severity;\n    }\n    if (Is.defined(code)) {\n      result.code = code;\n    }\n    if (Is.defined(source)) {\n      result.source = source;\n    }\n    if (Is.defined(relatedInformation)) {\n      result.relatedInformation = relatedInformation;\n    }\n    return result;\n  }\n  Diagnostic.create = create;\n  /**\n   * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\n   */\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Range.is(candidate.range) && Is.string(candidate.message) && (Is.number(candidate.severity) || Is.undefined(candidate.severity)) && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code)) && (Is.string(candidate.source) || Is.undefined(candidate.source)) && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\n  }\n  Diagnostic.is = is;\n})(Diagnostic || (Diagnostic = {}));\n/**\n * The Command namespace provides helper functions to work with\n * [Command](#Command) literals.\n */\nexport var Command;\n(function (Command) {\n  /**\n   * Creates a new Command literal.\n   */\n  function create(title, command) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n      args[_i - 2] = arguments[_i];\n    }\n    var result = {\n      title: title,\n      command: command\n    };\n    if (Is.defined(args) && args.length > 0) {\n      result.arguments = args;\n    }\n    return result;\n  }\n  Command.create = create;\n  /**\n   * Checks whether the given literal conforms to the [Command](#Command) interface.\n   */\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\n  }\n  Command.is = is;\n})(Command || (Command = {}));\n/**\n * The TextEdit namespace provides helper function to create replace,\n * insert and delete edits more easily.\n */\nexport var TextEdit;\n(function (TextEdit) {\n  /**\n   * Creates a replace text edit.\n   * @param range The range of text to be replaced.\n   * @param newText The new text.\n   */\n  function replace(range, newText) {\n    return {\n      range: range,\n      newText: newText\n    };\n  }\n  TextEdit.replace = replace;\n  /**\n   * Creates a insert text edit.\n   * @param position The position to insert the text at.\n   * @param newText The text to be inserted.\n   */\n  function insert(position, newText) {\n    return {\n      range: {\n        start: position,\n        end: position\n      },\n      newText: newText\n    };\n  }\n  TextEdit.insert = insert;\n  /**\n   * Creates a delete text edit.\n   * @param range The range of text to be deleted.\n   */\n  function del(range) {\n    return {\n      range: range,\n      newText: ''\n    };\n  }\n  TextEdit.del = del;\n  function is(value) {\n    var candidate = value;\n    return Is.objectLiteral(candidate) && Is.string(candidate.newText) && Range.is(candidate.range);\n  }\n  TextEdit.is = is;\n})(TextEdit || (TextEdit = {}));\n/**\n * The TextDocumentEdit namespace provides helper function to create\n * an edit that manipulates a text document.\n */\nexport var TextDocumentEdit;\n(function (TextDocumentEdit) {\n  /**\n   * Creates a new `TextDocumentEdit`\n   */\n  function create(textDocument, edits) {\n    return {\n      textDocument: textDocument,\n      edits: edits\n    };\n  }\n  TextDocumentEdit.create = create;\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && VersionedTextDocumentIdentifier.is(candidate.textDocument) && Array.isArray(candidate.edits);\n  }\n  TextDocumentEdit.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nexport var WorkspaceEdit;\n(function (WorkspaceEdit) {\n  function is(value) {\n    var candidate = value;\n    return candidate && (candidate.changes !== void 0 || candidate.documentChanges !== void 0) && (candidate.documentChanges === void 0 || Is.typedArray(candidate.documentChanges, TextDocumentEdit.is));\n  }\n  WorkspaceEdit.is = is;\n})(WorkspaceEdit || (WorkspaceEdit = {}));\nvar TextEditChangeImpl = /** @class */function () {\n  function TextEditChangeImpl(edits) {\n    this.edits = edits;\n  }\n  TextEditChangeImpl.prototype.insert = function (position, newText) {\n    this.edits.push(TextEdit.insert(position, newText));\n  };\n  TextEditChangeImpl.prototype.replace = function (range, newText) {\n    this.edits.push(TextEdit.replace(range, newText));\n  };\n  TextEditChangeImpl.prototype.delete = function (range) {\n    this.edits.push(TextEdit.del(range));\n  };\n  TextEditChangeImpl.prototype.add = function (edit) {\n    this.edits.push(edit);\n  };\n  TextEditChangeImpl.prototype.all = function () {\n    return this.edits;\n  };\n  TextEditChangeImpl.prototype.clear = function () {\n    this.edits.splice(0, this.edits.length);\n  };\n  return TextEditChangeImpl;\n}();\n/**\n * A workspace change helps constructing changes to a workspace.\n */\nvar WorkspaceChange = /** @class */function () {\n  function WorkspaceChange(workspaceEdit) {\n    var _this = this;\n    this._textEditChanges = Object.create(null);\n    if (workspaceEdit) {\n      this._workspaceEdit = workspaceEdit;\n      if (workspaceEdit.documentChanges) {\n        workspaceEdit.documentChanges.forEach(function (textDocumentEdit) {\n          var textEditChange = new TextEditChangeImpl(textDocumentEdit.edits);\n          _this._textEditChanges[textDocumentEdit.textDocument.uri] = textEditChange;\n        });\n      } else if (workspaceEdit.changes) {\n        Object.keys(workspaceEdit.changes).forEach(function (key) {\n          var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n          _this._textEditChanges[key] = textEditChange;\n        });\n      }\n    }\n  }\n  Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\n    /**\n     * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\n     * use to be returned from a workspace edit operation like rename.\n     */\n    get: function get() {\n      return this._workspaceEdit;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  WorkspaceChange.prototype.getTextEditChange = function (key) {\n    if (VersionedTextDocumentIdentifier.is(key)) {\n      if (!this._workspaceEdit) {\n        this._workspaceEdit = {\n          documentChanges: []\n        };\n      }\n      if (!this._workspaceEdit.documentChanges) {\n        throw new Error('Workspace edit is not configured for versioned document changes.');\n      }\n      var textDocument = key;\n      var result = this._textEditChanges[textDocument.uri];\n      if (!result) {\n        var edits = [];\n        var textDocumentEdit = {\n          textDocument: textDocument,\n          edits: edits\n        };\n        this._workspaceEdit.documentChanges.push(textDocumentEdit);\n        result = new TextEditChangeImpl(edits);\n        this._textEditChanges[textDocument.uri] = result;\n      }\n      return result;\n    } else {\n      if (!this._workspaceEdit) {\n        this._workspaceEdit = {\n          changes: Object.create(null)\n        };\n      }\n      if (!this._workspaceEdit.changes) {\n        throw new Error('Workspace edit is not configured for normal text edit changes.');\n      }\n      var result = this._textEditChanges[key];\n      if (!result) {\n        var edits = [];\n        this._workspaceEdit.changes[key] = edits;\n        result = new TextEditChangeImpl(edits);\n        this._textEditChanges[key] = result;\n      }\n      return result;\n    }\n  };\n  return WorkspaceChange;\n}();\nexport { WorkspaceChange };\n/**\n * The TextDocumentIdentifier namespace provides helper functions to work with\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\n */\nexport var TextDocumentIdentifier;\n(function (TextDocumentIdentifier) {\n  /**\n   * Creates a new TextDocumentIdentifier literal.\n   * @param uri The document's uri.\n   */\n  function create(uri) {\n    return {\n      uri: uri\n    };\n  }\n  TextDocumentIdentifier.create = create;\n  /**\n   * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\n   */\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.uri);\n  }\n  TextDocumentIdentifier.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n/**\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\n */\nexport var VersionedTextDocumentIdentifier;\n(function (VersionedTextDocumentIdentifier) {\n  /**\n   * Creates a new VersionedTextDocumentIdentifier literal.\n   * @param uri The document's uri.\n   * @param uri The document's text.\n   */\n  function create(uri, version) {\n    return {\n      uri: uri,\n      version: version\n    };\n  }\n  VersionedTextDocumentIdentifier.create = create;\n  /**\n   * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\n   */\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.uri) && Is.number(candidate.version);\n  }\n  VersionedTextDocumentIdentifier.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n/**\n * The TextDocumentItem namespace provides helper functions to work with\n * [TextDocumentItem](#TextDocumentItem) literals.\n */\nexport var TextDocumentItem;\n(function (TextDocumentItem) {\n  /**\n   * Creates a new TextDocumentItem literal.\n   * @param uri The document's uri.\n   * @param languageId The document's language identifier.\n   * @param version The document's version number.\n   * @param text The document's text.\n   */\n  function create(uri, languageId, version, text) {\n    return {\n      uri: uri,\n      languageId: languageId,\n      version: version,\n      text: text\n    };\n  }\n  TextDocumentItem.create = create;\n  /**\n   * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\n   */\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\n  }\n  TextDocumentItem.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n/**\n * Describes the content type that a client supports in various\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n *\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\n * are reserved for internal usage.\n */\nexport var MarkupKind;\n(function (MarkupKind) {\n  /**\n   * Plain text is supported as a content format\n   */\n  MarkupKind.PlainText = 'plaintext';\n  /**\n   * Markdown is supported as a content format\n   */\n  MarkupKind.Markdown = 'markdown';\n})(MarkupKind || (MarkupKind = {}));\n(function (MarkupKind) {\n  /**\n   * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\n   */\n  function is(value) {\n    var candidate = value;\n    return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\n  }\n  MarkupKind.is = is;\n})(MarkupKind || (MarkupKind = {}));\nexport var MarkupContent;\n(function (MarkupContent) {\n  /**\n   * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\n   */\n  function is(value) {\n    var candidate = value;\n    return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\n  }\n  MarkupContent.is = is;\n})(MarkupContent || (MarkupContent = {}));\n/**\n * The kind of a completion entry.\n */\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n  CompletionItemKind.Text = 1;\n  CompletionItemKind.Method = 2;\n  CompletionItemKind.Function = 3;\n  CompletionItemKind.Constructor = 4;\n  CompletionItemKind.Field = 5;\n  CompletionItemKind.Variable = 6;\n  CompletionItemKind.Class = 7;\n  CompletionItemKind.Interface = 8;\n  CompletionItemKind.Module = 9;\n  CompletionItemKind.Property = 10;\n  CompletionItemKind.Unit = 11;\n  CompletionItemKind.Value = 12;\n  CompletionItemKind.Enum = 13;\n  CompletionItemKind.Keyword = 14;\n  CompletionItemKind.Snippet = 15;\n  CompletionItemKind.Color = 16;\n  CompletionItemKind.File = 17;\n  CompletionItemKind.Reference = 18;\n  CompletionItemKind.Folder = 19;\n  CompletionItemKind.EnumMember = 20;\n  CompletionItemKind.Constant = 21;\n  CompletionItemKind.Struct = 22;\n  CompletionItemKind.Event = 23;\n  CompletionItemKind.Operator = 24;\n  CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n/**\n * Defines whether the insert text in a completion item should be interpreted as\n * plain text or a snippet.\n */\nexport var InsertTextFormat;\n(function (InsertTextFormat) {\n  /**\n   * The primary text to be inserted is treated as a plain string.\n   */\n  InsertTextFormat.PlainText = 1;\n  /**\n   * The primary text to be inserted is treated as a snippet.\n   *\n   * A snippet can define tab stops and placeholders with `$1`, `$2`\n   * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\n   * the end of the snippet. Placeholders with equal identifiers are linked,\n   * that is typing in one will update others too.\n   *\n   * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\n   */\n  InsertTextFormat.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n/**\n * The CompletionItem namespace provides functions to deal with\n * completion items.\n */\nexport var CompletionItem;\n(function (CompletionItem) {\n  /**\n   * Create a completion item and seed it with a label.\n   * @param label The completion item's label\n   */\n  function create(label) {\n    return {\n      label: label\n    };\n  }\n  CompletionItem.create = create;\n})(CompletionItem || (CompletionItem = {}));\n/**\n * The CompletionList namespace provides functions to deal with\n * completion lists.\n */\nexport var CompletionList;\n(function (CompletionList) {\n  /**\n   * Creates a new completion list.\n   *\n   * @param items The completion items.\n   * @param isIncomplete The list is not complete.\n   */\n  function create(items, isIncomplete) {\n    return {\n      items: items ? items : [],\n      isIncomplete: !!isIncomplete\n    };\n  }\n  CompletionList.create = create;\n})(CompletionList || (CompletionList = {}));\nexport var MarkedString;\n(function (MarkedString) {\n  /**\n   * Creates a marked string from plain text.\n   *\n   * @param plainText The plain text.\n   */\n  function fromPlainText(plainText) {\n    return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n  }\n\n  MarkedString.fromPlainText = fromPlainText;\n  /**\n   * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\n   */\n  function is(value) {\n    var candidate = value;\n    return Is.string(candidate) || Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value);\n  }\n  MarkedString.is = is;\n})(MarkedString || (MarkedString = {}));\nexport var Hover;\n(function (Hover) {\n  /**\n   * Checks whether the given value conforms to the [Hover](#Hover) interface.\n   */\n  function is(value) {\n    var candidate = value;\n    return Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) || MarkedString.is(candidate.contents) || Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\n  }\n  Hover.is = is;\n})(Hover || (Hover = {}));\n/**\n * The ParameterInformation namespace provides helper functions to work with\n * [ParameterInformation](#ParameterInformation) literals.\n */\nexport var ParameterInformation;\n(function (ParameterInformation) {\n  /**\n   * Creates a new parameter information literal.\n   *\n   * @param label A label string.\n   * @param documentation A doc string.\n   */\n  function create(label, documentation) {\n    return documentation ? {\n      label: label,\n      documentation: documentation\n    } : {\n      label: label\n    };\n  }\n  ParameterInformation.create = create;\n  ;\n})(ParameterInformation || (ParameterInformation = {}));\n/**\n * The SignatureInformation namespace provides helper functions to work with\n * [SignatureInformation](#SignatureInformation) literals.\n */\nexport var SignatureInformation;\n(function (SignatureInformation) {\n  function create(label, documentation) {\n    var parameters = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n      parameters[_i - 2] = arguments[_i];\n    }\n    var result = {\n      label: label\n    };\n    if (Is.defined(documentation)) {\n      result.documentation = documentation;\n    }\n    if (Is.defined(parameters)) {\n      result.parameters = parameters;\n    } else {\n      result.parameters = [];\n    }\n    return result;\n  }\n  SignatureInformation.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n  /**\n   * A textual occurrence.\n   */\n  DocumentHighlightKind.Text = 1;\n  /**\n   * Read-access of a symbol, like reading a variable.\n   */\n  DocumentHighlightKind.Read = 2;\n  /**\n   * Write-access of a symbol, like writing to a variable.\n   */\n  DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * DocumentHighlight namespace to provide helper functions to work with\n * [DocumentHighlight](#DocumentHighlight) literals.\n */\nexport var DocumentHighlight;\n(function (DocumentHighlight) {\n  /**\n   * Create a DocumentHighlight object.\n   * @param range The range the highlight applies to.\n   */\n  function create(range, kind) {\n    var result = {\n      range: range\n    };\n    if (Is.number(kind)) {\n      result.kind = kind;\n    }\n    return result;\n  }\n  DocumentHighlight.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n  SymbolKind.File = 1;\n  SymbolKind.Module = 2;\n  SymbolKind.Namespace = 3;\n  SymbolKind.Package = 4;\n  SymbolKind.Class = 5;\n  SymbolKind.Method = 6;\n  SymbolKind.Property = 7;\n  SymbolKind.Field = 8;\n  SymbolKind.Constructor = 9;\n  SymbolKind.Enum = 10;\n  SymbolKind.Interface = 11;\n  SymbolKind.Function = 12;\n  SymbolKind.Variable = 13;\n  SymbolKind.Constant = 14;\n  SymbolKind.String = 15;\n  SymbolKind.Number = 16;\n  SymbolKind.Boolean = 17;\n  SymbolKind.Array = 18;\n  SymbolKind.Object = 19;\n  SymbolKind.Key = 20;\n  SymbolKind.Null = 21;\n  SymbolKind.EnumMember = 22;\n  SymbolKind.Struct = 23;\n  SymbolKind.Event = 24;\n  SymbolKind.Operator = 25;\n  SymbolKind.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\nexport var SymbolInformation;\n(function (SymbolInformation) {\n  /**\n   * Creates a new symbol information literal.\n   *\n   * @param name The name of the symbol.\n   * @param kind The kind of the symbol.\n   * @param range The range of the location of the symbol.\n   * @param uri The resource of the location of symbol, defaults to the current document.\n   * @param containerName The name of the symbol containing the symbol.\n   */\n  function create(name, kind, range, uri, containerName) {\n    var result = {\n      name: name,\n      kind: kind,\n      location: {\n        uri: uri,\n        range: range\n      }\n    };\n    if (containerName) {\n      result.containerName = containerName;\n    }\n    return result;\n  }\n  SymbolInformation.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\n/**\n * Represents programming constructs like variables, classes, interfaces etc.\n * that appear in a document. Document symbols can be hierarchical and they\n * have two ranges: one that encloses its definition and one that points to\n * its most interesting range, e.g. the range of an identifier.\n */\nvar DocumentSymbol = /** @class */function () {\n  function DocumentSymbol() {}\n  return DocumentSymbol;\n}();\nexport { DocumentSymbol };\n(function (DocumentSymbol) {\n  /**\n   * Creates a new symbol information literal.\n   *\n   * @param name The name of the symbol.\n   * @param detail The detail of the symbol.\n   * @param kind The kind of the symbol.\n   * @param range The range of the symbol.\n   * @param selectionRange The selectionRange of the symbol.\n   * @param children Children of the symbol.\n   */\n  function create(name, detail, kind, range, selectionRange, children) {\n    var result = {\n      name: name,\n      detail: detail,\n      kind: kind,\n      range: range,\n      selectionRange: selectionRange\n    };\n    if (children !== void 0) {\n      result.children = children;\n    }\n    return result;\n  }\n  DocumentSymbol.create = create;\n  /**\n   * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\n   */\n  function is(value) {\n    var candidate = value;\n    return candidate && Is.string(candidate.name) && Is.number(candidate.kind) && Range.is(candidate.range) && Range.is(candidate.selectionRange) && (candidate.detail === void 0 || Is.string(candidate.detail)) && (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) && (candidate.children === void 0 || Array.isArray(candidate.children));\n  }\n  DocumentSymbol.is = is;\n})(DocumentSymbol || (DocumentSymbol = {}));\n/**\n * A set of predefined code action kinds\n */\nexport var CodeActionKind;\n(function (CodeActionKind) {\n  /**\n   * Base kind for quickfix actions: 'quickfix'\n   */\n  CodeActionKind.QuickFix = 'quickfix';\n  /**\n   * Base kind for refactoring actions: 'refactor'\n   */\n  CodeActionKind.Refactor = 'refactor';\n  /**\n   * Base kind for refactoring extraction actions: 'refactor.extract'\n   *\n   * Example extract actions:\n   *\n   * - Extract method\n   * - Extract function\n   * - Extract variable\n   * - Extract interface from class\n   * - ...\n   */\n  CodeActionKind.RefactorExtract = 'refactor.extract';\n  /**\n   * Base kind for refactoring inline actions: 'refactor.inline'\n   *\n   * Example inline actions:\n   *\n   * - Inline function\n   * - Inline variable\n   * - Inline constant\n   * - ...\n   */\n  CodeActionKind.RefactorInline = 'refactor.inline';\n  /**\n   * Base kind for refactoring rewrite actions: 'refactor.rewrite'\n   *\n   * Example rewrite actions:\n   *\n   * - Convert JavaScript function to class\n   * - Add or remove parameter\n   * - Encapsulate field\n   * - Make method static\n   * - Move method to base class\n   * - ...\n   */\n  CodeActionKind.RefactorRewrite = 'refactor.rewrite';\n  /**\n   * Base kind for source actions: `source`\n   *\n   * Source code actions apply to the entire file.\n   */\n  CodeActionKind.Source = 'source';\n  /**\n   * Base kind for an organize imports source action: `source.organizeImports`\n   */\n  CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\n})(CodeActionKind || (CodeActionKind = {}));\n/**\n * The CodeActionContext namespace provides helper functions to work with\n * [CodeActionContext](#CodeActionContext) literals.\n */\nexport var CodeActionContext;\n(function (CodeActionContext) {\n  /**\n   * Creates a new CodeActionContext literal.\n   */\n  function create(diagnostics, only) {\n    var result = {\n      diagnostics: diagnostics\n    };\n    if (only !== void 0 && only !== null) {\n      result.only = only;\n    }\n    return result;\n  }\n  CodeActionContext.create = create;\n  /**\n   * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\n   */\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string));\n  }\n  CodeActionContext.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\nexport var CodeAction;\n(function (CodeAction) {\n  function create(title, commandOrEdit, kind) {\n    var result = {\n      title: title\n    };\n    if (Command.is(commandOrEdit)) {\n      result.command = commandOrEdit;\n    } else {\n      result.edit = commandOrEdit;\n    }\n    if (kind !== void null) {\n      result.kind = kind;\n    }\n    return result;\n  }\n  CodeAction.create = create;\n  function is(value) {\n    var candidate = value;\n    return candidate && Is.string(candidate.title) && (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) && (candidate.kind === void 0 || Is.string(candidate.kind)) && (candidate.edit !== void 0 || candidate.command !== void 0) && (candidate.command === void 0 || Command.is(candidate.command)) && (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\n  }\n  CodeAction.is = is;\n})(CodeAction || (CodeAction = {}));\n/**\n * The CodeLens namespace provides helper functions to work with\n * [CodeLens](#CodeLens) literals.\n */\nexport var CodeLens;\n(function (CodeLens) {\n  /**\n   * Creates a new CodeLens literal.\n   */\n  function create(range, data) {\n    var result = {\n      range: range\n    };\n    if (Is.defined(data)) result.data = data;\n    return result;\n  }\n  CodeLens.create = create;\n  /**\n   * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\n   */\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n  }\n  CodeLens.is = is;\n})(CodeLens || (CodeLens = {}));\n/**\n * The FormattingOptions namespace provides helper functions to work with\n * [FormattingOptions](#FormattingOptions) literals.\n */\nexport var FormattingOptions;\n(function (FormattingOptions) {\n  /**\n   * Creates a new FormattingOptions literal.\n   */\n  function create(tabSize, insertSpaces) {\n    return {\n      tabSize: tabSize,\n      insertSpaces: insertSpaces\n    };\n  }\n  FormattingOptions.create = create;\n  /**\n   * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\n   */\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n  }\n  FormattingOptions.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n/**\n * A document link is a range in a text document that links to an internal or external resource, like another\n * text document or a web site.\n */\nvar DocumentLink = /** @class */function () {\n  function DocumentLink() {}\n  return DocumentLink;\n}();\nexport { DocumentLink };\n/**\n * The DocumentLink namespace provides helper functions to work with\n * [DocumentLink](#DocumentLink) literals.\n */\n(function (DocumentLink) {\n  /**\n   * Creates a new DocumentLink literal.\n   */\n  function create(range, target, data) {\n    return {\n      range: range,\n      target: target,\n      data: data\n    };\n  }\n  DocumentLink.create = create;\n  /**\n   * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\n   */\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n  }\n  DocumentLink.is = is;\n})(DocumentLink || (DocumentLink = {}));\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\nexport var TextDocument;\n(function (TextDocument) {\n  /**\n   * Creates a new ITextDocument literal from the given uri and content.\n   * @param uri The document's uri.\n   * @param languageId  The document's language Id.\n   * @param content The document's content.\n   */\n  function create(uri, languageId, version, content) {\n    return new FullTextDocument(uri, languageId, version, content);\n  }\n  TextDocument.create = create;\n  /**\n   * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\n   */\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount) && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n  }\n  TextDocument.is = is;\n  function applyEdits(document, edits) {\n    var text = document.getText();\n    var sortedEdits = mergeSort(edits, function (a, b) {\n      var diff = a.range.start.line - b.range.start.line;\n      if (diff === 0) {\n        return a.range.start.character - b.range.start.character;\n      }\n      return diff;\n    });\n    var lastModifiedOffset = text.length;\n    for (var i = sortedEdits.length - 1; i >= 0; i--) {\n      var e = sortedEdits[i];\n      var startOffset = document.offsetAt(e.range.start);\n      var endOffset = document.offsetAt(e.range.end);\n      if (endOffset <= lastModifiedOffset) {\n        text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n      } else {\n        throw new Error('Ovelapping edit');\n      }\n      lastModifiedOffset = startOffset;\n    }\n    return text;\n  }\n  TextDocument.applyEdits = applyEdits;\n  function mergeSort(data, compare) {\n    if (data.length <= 1) {\n      // sorted\n      return data;\n    }\n    var p = data.length / 2 | 0;\n    var left = data.slice(0, p);\n    var right = data.slice(p);\n    mergeSort(left, compare);\n    mergeSort(right, compare);\n    var leftIdx = 0;\n    var rightIdx = 0;\n    var i = 0;\n    while (leftIdx < left.length && rightIdx < right.length) {\n      var ret = compare(left[leftIdx], right[rightIdx]);\n      if (ret <= 0) {\n        // smaller_equal -> take left to preserve order\n        data[i++] = left[leftIdx++];\n      } else {\n        // greater -> take right\n        data[i++] = right[rightIdx++];\n      }\n    }\n    while (leftIdx < left.length) {\n      data[i++] = left[leftIdx++];\n    }\n    while (rightIdx < right.length) {\n      data[i++] = right[rightIdx++];\n    }\n    return data;\n  }\n})(TextDocument || (TextDocument = {}));\n/**\n * Represents reasons why a text document is saved.\n */\nexport var TextDocumentSaveReason;\n(function (TextDocumentSaveReason) {\n  /**\n   * Manually triggered, e.g. by the user pressing save, by starting debugging,\n   * or by an API call.\n   */\n  TextDocumentSaveReason.Manual = 1;\n  /**\n   * Automatic after a delay.\n   */\n  TextDocumentSaveReason.AfterDelay = 2;\n  /**\n   * When the editor lost focus.\n   */\n  TextDocumentSaveReason.FocusOut = 3;\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\nvar FullTextDocument = /** @class */function () {\n  function FullTextDocument(uri, languageId, version, content) {\n    this._uri = uri;\n    this._languageId = languageId;\n    this._version = version;\n    this._content = content;\n    this._lineOffsets = null;\n  }\n  Object.defineProperty(FullTextDocument.prototype, \"uri\", {\n    get: function get() {\n      return this._uri;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\n    get: function get() {\n      return this._languageId;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FullTextDocument.prototype, \"version\", {\n    get: function get() {\n      return this._version;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  FullTextDocument.prototype.getText = function (range) {\n    if (range) {\n      var start = this.offsetAt(range.start);\n      var end = this.offsetAt(range.end);\n      return this._content.substring(start, end);\n    }\n    return this._content;\n  };\n  FullTextDocument.prototype.update = function (event, version) {\n    this._content = event.text;\n    this._version = version;\n    this._lineOffsets = null;\n  };\n  FullTextDocument.prototype.getLineOffsets = function () {\n    if (this._lineOffsets === null) {\n      var lineOffsets = [];\n      var text = this._content;\n      var isLineStart = true;\n      for (var i = 0; i < text.length; i++) {\n        if (isLineStart) {\n          lineOffsets.push(i);\n          isLineStart = false;\n        }\n        var ch = text.charAt(i);\n        isLineStart = ch === '\\r' || ch === '\\n';\n        if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n          i++;\n        }\n      }\n      if (isLineStart && text.length > 0) {\n        lineOffsets.push(text.length);\n      }\n      this._lineOffsets = lineOffsets;\n    }\n    return this._lineOffsets;\n  };\n  FullTextDocument.prototype.positionAt = function (offset) {\n    offset = Math.max(Math.min(offset, this._content.length), 0);\n    var lineOffsets = this.getLineOffsets();\n    var low = 0,\n      high = lineOffsets.length;\n    if (high === 0) {\n      return Position.create(0, offset);\n    }\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (lineOffsets[mid] > offset) {\n        high = mid;\n      } else {\n        low = mid + 1;\n      }\n    }\n    // low is the least x for which the line offset is larger than the current offset\n    // or array.length if no line offset is larger than the current offset\n    var line = low - 1;\n    return Position.create(line, offset - lineOffsets[line]);\n  };\n  FullTextDocument.prototype.offsetAt = function (position) {\n    var lineOffsets = this.getLineOffsets();\n    if (position.line >= lineOffsets.length) {\n      return this._content.length;\n    } else if (position.line < 0) {\n      return 0;\n    }\n    var lineOffset = lineOffsets[position.line];\n    var nextLineOffset = position.line + 1 < lineOffsets.length ? lineOffsets[position.line + 1] : this._content.length;\n    return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n  };\n  Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\n    get: function get() {\n      return this.getLineOffsets().length;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return FullTextDocument;\n}();\nvar Is;\n(function (Is) {\n  var toString = Object.prototype.toString;\n  function defined(value) {\n    return typeof value !== 'undefined';\n  }\n  Is.defined = defined;\n  function undefined(value) {\n    return typeof value === 'undefined';\n  }\n  Is.undefined = undefined;\n  function boolean(value) {\n    return value === true || value === false;\n  }\n  Is.boolean = boolean;\n  function string(value) {\n    return toString.call(value) === '[object String]';\n  }\n  Is.string = string;\n  function number(value) {\n    return toString.call(value) === '[object Number]';\n  }\n  Is.number = number;\n  function func(value) {\n    return toString.call(value) === '[object Function]';\n  }\n  Is.func = func;\n  function objectLiteral(value) {\n    // Strictly speaking class instances pass this check as well. Since the LSP\n    // doesn't use classes we ignore this for now. If we do we need to add something\n    // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\n    return value !== null && typeof value === 'object';\n  }\n  Is.objectLiteral = objectLiteral;\n  function typedArray(value, check) {\n    return Array.isArray(value) && value.every(check);\n  }\n  Is.typedArray = typedArray;\n})(Is || (Is = {}));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as ls from './_deps/vscode-languageserver-types/main.js';\nvar Uri = monaco.Uri;\nvar Range = monaco.Range;\n// --- diagnostics --- ---\nvar DiagnosticsAdapter = /** @class */function () {\n  function DiagnosticsAdapter(_languageId, _worker, defaults) {\n    var _this = this;\n    this._languageId = _languageId;\n    this._worker = _worker;\n    this._disposables = [];\n    this._listener = Object.create(null);\n    var onModelAdd = function onModelAdd(model) {\n      var modeId = model.getModeId();\n      if (modeId !== _this._languageId) {\n        return;\n      }\n      var handle;\n      _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\n        clearTimeout(handle);\n        handle = setTimeout(function () {\n          return _this._doValidate(model.uri, modeId);\n        }, 500);\n      });\n      _this._doValidate(model.uri, modeId);\n    };\n    var onModelRemoved = function onModelRemoved(model) {\n      monaco.editor.setModelMarkers(model, _this._languageId, []);\n      var uriStr = model.uri.toString();\n      var listener = _this._listener[uriStr];\n      if (listener) {\n        listener.dispose();\n        delete _this._listener[uriStr];\n      }\n    };\n    this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\n    this._disposables.push(monaco.editor.onWillDisposeModel(function (model) {\n      onModelRemoved(model);\n      _this._resetSchema(model.uri);\n    }));\n    this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\n      onModelRemoved(event.model);\n      onModelAdd(event.model);\n      _this._resetSchema(event.model.uri);\n    }));\n    this._disposables.push(defaults.onDidChange(function (_) {\n      monaco.editor.getModels().forEach(function (model) {\n        if (model.getModeId() === _this._languageId) {\n          onModelRemoved(model);\n          onModelAdd(model);\n        }\n      });\n    }));\n    this._disposables.push({\n      dispose: function dispose() {\n        monaco.editor.getModels().forEach(onModelRemoved);\n        for (var key in _this._listener) {\n          _this._listener[key].dispose();\n        }\n      }\n    });\n    monaco.editor.getModels().forEach(onModelAdd);\n  }\n  DiagnosticsAdapter.prototype.dispose = function () {\n    this._disposables.forEach(function (d) {\n      return d && d.dispose();\n    });\n    this._disposables = [];\n  };\n  DiagnosticsAdapter.prototype._resetSchema = function (resource) {\n    this._worker().then(function (worker) {\n      worker.resetSchema(resource.toString());\n    });\n  };\n  DiagnosticsAdapter.prototype._doValidate = function (resource, languageId) {\n    this._worker(resource).then(function (worker) {\n      return worker.doValidation(resource.toString()).then(function (diagnostics) {\n        var markers = diagnostics.map(function (d) {\n          return toDiagnostics(resource, d);\n        });\n        var model = monaco.editor.getModel(resource);\n        if (model.getModeId() === languageId) {\n          monaco.editor.setModelMarkers(model, languageId, markers);\n        }\n      });\n    }).then(undefined, function (err) {\n      console.error(err);\n    });\n  };\n  return DiagnosticsAdapter;\n}();\nexport { DiagnosticsAdapter };\nfunction toSeverity(lsSeverity) {\n  switch (lsSeverity) {\n    case ls.DiagnosticSeverity.Error:\n      return monaco.MarkerSeverity.Error;\n    case ls.DiagnosticSeverity.Warning:\n      return monaco.MarkerSeverity.Warning;\n    case ls.DiagnosticSeverity.Information:\n      return monaco.MarkerSeverity.Info;\n    case ls.DiagnosticSeverity.Hint:\n      return monaco.MarkerSeverity.Hint;\n    default:\n      return monaco.MarkerSeverity.Info;\n  }\n}\nfunction toDiagnostics(resource, diag) {\n  var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\n  return {\n    severity: toSeverity(diag.severity),\n    startLineNumber: diag.range.start.line + 1,\n    startColumn: diag.range.start.character + 1,\n    endLineNumber: diag.range.end.line + 1,\n    endColumn: diag.range.end.character + 1,\n    message: diag.message,\n    code: code,\n    source: diag.source\n  };\n}\n// --- completion ------\nfunction fromPosition(position) {\n  if (!position) {\n    return void 0;\n  }\n  return {\n    character: position.column - 1,\n    line: position.lineNumber - 1\n  };\n}\nfunction fromRange(range) {\n  if (!range) {\n    return void 0;\n  }\n  return {\n    start: {\n      line: range.startLineNumber - 1,\n      character: range.startColumn - 1\n    },\n    end: {\n      line: range.endLineNumber - 1,\n      character: range.endColumn - 1\n    }\n  };\n}\nfunction toRange(range) {\n  if (!range) {\n    return void 0;\n  }\n  return new Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\n}\nfunction toCompletionItemKind(kind) {\n  var mItemKind = monaco.languages.CompletionItemKind;\n  switch (kind) {\n    case ls.CompletionItemKind.Text:\n      return mItemKind.Text;\n    case ls.CompletionItemKind.Method:\n      return mItemKind.Method;\n    case ls.CompletionItemKind.Function:\n      return mItemKind.Function;\n    case ls.CompletionItemKind.Constructor:\n      return mItemKind.Constructor;\n    case ls.CompletionItemKind.Field:\n      return mItemKind.Field;\n    case ls.CompletionItemKind.Variable:\n      return mItemKind.Variable;\n    case ls.CompletionItemKind.Class:\n      return mItemKind.Class;\n    case ls.CompletionItemKind.Interface:\n      return mItemKind.Interface;\n    case ls.CompletionItemKind.Module:\n      return mItemKind.Module;\n    case ls.CompletionItemKind.Property:\n      return mItemKind.Property;\n    case ls.CompletionItemKind.Unit:\n      return mItemKind.Unit;\n    case ls.CompletionItemKind.Value:\n      return mItemKind.Value;\n    case ls.CompletionItemKind.Enum:\n      return mItemKind.Enum;\n    case ls.CompletionItemKind.Keyword:\n      return mItemKind.Keyword;\n    case ls.CompletionItemKind.Snippet:\n      return mItemKind.Snippet;\n    case ls.CompletionItemKind.Color:\n      return mItemKind.Color;\n    case ls.CompletionItemKind.File:\n      return mItemKind.File;\n    case ls.CompletionItemKind.Reference:\n      return mItemKind.Reference;\n  }\n  return mItemKind.Property;\n}\nfunction fromCompletionItemKind(kind) {\n  var mItemKind = monaco.languages.CompletionItemKind;\n  switch (kind) {\n    case mItemKind.Text:\n      return ls.CompletionItemKind.Text;\n    case mItemKind.Method:\n      return ls.CompletionItemKind.Method;\n    case mItemKind.Function:\n      return ls.CompletionItemKind.Function;\n    case mItemKind.Constructor:\n      return ls.CompletionItemKind.Constructor;\n    case mItemKind.Field:\n      return ls.CompletionItemKind.Field;\n    case mItemKind.Variable:\n      return ls.CompletionItemKind.Variable;\n    case mItemKind.Class:\n      return ls.CompletionItemKind.Class;\n    case mItemKind.Interface:\n      return ls.CompletionItemKind.Interface;\n    case mItemKind.Module:\n      return ls.CompletionItemKind.Module;\n    case mItemKind.Property:\n      return ls.CompletionItemKind.Property;\n    case mItemKind.Unit:\n      return ls.CompletionItemKind.Unit;\n    case mItemKind.Value:\n      return ls.CompletionItemKind.Value;\n    case mItemKind.Enum:\n      return ls.CompletionItemKind.Enum;\n    case mItemKind.Keyword:\n      return ls.CompletionItemKind.Keyword;\n    case mItemKind.Snippet:\n      return ls.CompletionItemKind.Snippet;\n    case mItemKind.Color:\n      return ls.CompletionItemKind.Color;\n    case mItemKind.File:\n      return ls.CompletionItemKind.File;\n    case mItemKind.Reference:\n      return ls.CompletionItemKind.Reference;\n  }\n  return ls.CompletionItemKind.Property;\n}\nfunction toTextEdit(textEdit) {\n  if (!textEdit) {\n    return void 0;\n  }\n  return {\n    range: toRange(textEdit.range),\n    text: textEdit.newText\n  };\n}\nvar CompletionAdapter = /** @class */function () {\n  function CompletionAdapter(_worker) {\n    this._worker = _worker;\n  }\n  Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\n    get: function get() {\n      return [' ', ':'];\n    },\n    enumerable: true,\n    configurable: true\n  });\n  CompletionAdapter.prototype.provideCompletionItems = function (model, position, context, token) {\n    var wordInfo = model.getWordUntilPosition(position);\n    var resource = model.uri;\n    return this._worker(resource).then(function (worker) {\n      return worker.doComplete(resource.toString(), fromPosition(position));\n    }).then(function (info) {\n      if (!info) {\n        return;\n      }\n      var items = info.items.map(function (entry) {\n        var item = {\n          label: entry.label,\n          insertText: entry.insertText || entry.label,\n          sortText: entry.sortText,\n          filterText: entry.filterText,\n          documentation: entry.documentation,\n          detail: entry.detail,\n          kind: toCompletionItemKind(entry.kind)\n        };\n        if (entry.textEdit) {\n          item.range = toRange(entry.textEdit.range);\n          item.insertText = entry.textEdit.newText;\n        }\n        if (entry.additionalTextEdits) {\n          item.additionalTextEdits = entry.additionalTextEdits.map(toTextEdit);\n        }\n        if (entry.insertTextFormat === ls.InsertTextFormat.Snippet) {\n          item.insertTextRules = monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet;\n        }\n        return item;\n      });\n      return {\n        isIncomplete: info.isIncomplete,\n        suggestions: items\n      };\n    });\n  };\n  return CompletionAdapter;\n}();\nexport { CompletionAdapter };\nfunction isMarkupContent(thing) {\n  return thing && typeof thing === 'object' && typeof thing.kind === 'string';\n}\nfunction toMarkdownString(entry) {\n  if (typeof entry === 'string') {\n    return {\n      value: entry\n    };\n  }\n  if (isMarkupContent(entry)) {\n    if (entry.kind === 'plaintext') {\n      return {\n        value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\n      };\n    }\n    return {\n      value: entry.value\n    };\n  }\n  return {\n    value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n'\n  };\n}\nfunction toMarkedStringArray(contents) {\n  if (!contents) {\n    return void 0;\n  }\n  if (Array.isArray(contents)) {\n    return contents.map(toMarkdownString);\n  }\n  return [toMarkdownString(contents)];\n}\n// --- hover ------\nvar HoverAdapter = /** @class */function () {\n  function HoverAdapter(_worker) {\n    this._worker = _worker;\n  }\n  HoverAdapter.prototype.provideHover = function (model, position, token) {\n    var resource = model.uri;\n    return this._worker(resource).then(function (worker) {\n      return worker.doHover(resource.toString(), fromPosition(position));\n    }).then(function (info) {\n      if (!info) {\n        return;\n      }\n      return {\n        range: toRange(info.range),\n        contents: toMarkedStringArray(info.contents)\n      };\n    });\n  };\n  return HoverAdapter;\n}();\nexport { HoverAdapter };\n// --- definition ------\nfunction toLocation(location) {\n  return {\n    uri: Uri.parse(location.uri),\n    range: toRange(location.range)\n  };\n}\n// --- document symbols ------\nfunction toSymbolKind(kind) {\n  var mKind = monaco.languages.SymbolKind;\n  switch (kind) {\n    case ls.SymbolKind.File:\n      return mKind.Array;\n    case ls.SymbolKind.Module:\n      return mKind.Module;\n    case ls.SymbolKind.Namespace:\n      return mKind.Namespace;\n    case ls.SymbolKind.Package:\n      return mKind.Package;\n    case ls.SymbolKind.Class:\n      return mKind.Class;\n    case ls.SymbolKind.Method:\n      return mKind.Method;\n    case ls.SymbolKind.Property:\n      return mKind.Property;\n    case ls.SymbolKind.Field:\n      return mKind.Field;\n    case ls.SymbolKind.Constructor:\n      return mKind.Constructor;\n    case ls.SymbolKind.Enum:\n      return mKind.Enum;\n    case ls.SymbolKind.Interface:\n      return mKind.Interface;\n    case ls.SymbolKind.Function:\n      return mKind.Function;\n    case ls.SymbolKind.Variable:\n      return mKind.Variable;\n    case ls.SymbolKind.Constant:\n      return mKind.Constant;\n    case ls.SymbolKind.String:\n      return mKind.String;\n    case ls.SymbolKind.Number:\n      return mKind.Number;\n    case ls.SymbolKind.Boolean:\n      return mKind.Boolean;\n    case ls.SymbolKind.Array:\n      return mKind.Array;\n  }\n  return mKind.Function;\n}\nvar DocumentSymbolAdapter = /** @class */function () {\n  function DocumentSymbolAdapter(_worker) {\n    this._worker = _worker;\n  }\n  DocumentSymbolAdapter.prototype.provideDocumentSymbols = function (model, token) {\n    var resource = model.uri;\n    return this._worker(resource).then(function (worker) {\n      return worker.findDocumentSymbols(resource.toString());\n    }).then(function (items) {\n      if (!items) {\n        return;\n      }\n      return items.map(function (item) {\n        return {\n          name: item.name,\n          detail: '',\n          containerName: item.containerName,\n          kind: toSymbolKind(item.kind),\n          range: toRange(item.location.range),\n          selectionRange: toRange(item.location.range)\n        };\n      });\n    });\n  };\n  return DocumentSymbolAdapter;\n}();\nexport { DocumentSymbolAdapter };\nfunction fromFormattingOptions(options) {\n  return {\n    tabSize: options.tabSize,\n    insertSpaces: options.insertSpaces\n  };\n}\nvar DocumentFormattingEditProvider = /** @class */function () {\n  function DocumentFormattingEditProvider(_worker) {\n    this._worker = _worker;\n  }\n  DocumentFormattingEditProvider.prototype.provideDocumentFormattingEdits = function (model, options, token) {\n    var resource = model.uri;\n    return this._worker(resource).then(function (worker) {\n      return worker.format(resource.toString(), null, fromFormattingOptions(options)).then(function (edits) {\n        if (!edits || edits.length === 0) {\n          return;\n        }\n        return edits.map(toTextEdit);\n      });\n    });\n  };\n  return DocumentFormattingEditProvider;\n}();\nexport { DocumentFormattingEditProvider };\nvar DocumentRangeFormattingEditProvider = /** @class */function () {\n  function DocumentRangeFormattingEditProvider(_worker) {\n    this._worker = _worker;\n  }\n  DocumentRangeFormattingEditProvider.prototype.provideDocumentRangeFormattingEdits = function (model, range, options, token) {\n    var resource = model.uri;\n    return this._worker(resource).then(function (worker) {\n      return worker.format(resource.toString(), fromRange(range), fromFormattingOptions(options)).then(function (edits) {\n        if (!edits || edits.length === 0) {\n          return;\n        }\n        return edits.map(toTextEdit);\n      });\n    });\n  };\n  return DocumentRangeFormattingEditProvider;\n}();\nexport { DocumentRangeFormattingEditProvider };\nvar DocumentColorAdapter = /** @class */function () {\n  function DocumentColorAdapter(_worker) {\n    this._worker = _worker;\n  }\n  DocumentColorAdapter.prototype.provideDocumentColors = function (model, token) {\n    var resource = model.uri;\n    return this._worker(resource).then(function (worker) {\n      return worker.findDocumentColors(resource.toString());\n    }).then(function (infos) {\n      if (!infos) {\n        return;\n      }\n      return infos.map(function (item) {\n        return {\n          color: item.color,\n          range: toRange(item.range)\n        };\n      });\n    });\n  };\n  DocumentColorAdapter.prototype.provideColorPresentations = function (model, info, token) {\n    var resource = model.uri;\n    return this._worker(resource).then(function (worker) {\n      return worker.getColorPresentations(resource.toString(), info.color, fromRange(info.range));\n    }).then(function (presentations) {\n      if (!presentations) {\n        return;\n      }\n      return presentations.map(function (presentation) {\n        var item = {\n          label: presentation.label\n        };\n        if (presentation.textEdit) {\n          item.textEdit = toTextEdit(presentation.textEdit);\n        }\n        if (presentation.additionalTextEdits) {\n          item.additionalTextEdits = presentation.additionalTextEdits.map(toTextEdit);\n        }\n        return item;\n      });\n    });\n  };\n  return DocumentColorAdapter;\n}();\nexport { DocumentColorAdapter };\nvar FoldingRangeAdapter = /** @class */function () {\n  function FoldingRangeAdapter(_worker) {\n    this._worker = _worker;\n  }\n  FoldingRangeAdapter.prototype.provideFoldingRanges = function (model, context, token) {\n    var resource = model.uri;\n    return this._worker(resource).then(function (worker) {\n      return worker.provideFoldingRanges(resource.toString(), context);\n    }).then(function (ranges) {\n      if (!ranges) {\n        return;\n      }\n      return ranges.map(function (range) {\n        var result = {\n          start: range.startLine + 1,\n          end: range.endLine + 1\n        };\n        if (typeof range.kind !== 'undefined') {\n          result.kind = toFoldingRangeKind(range.kind);\n        }\n        return result;\n      });\n    });\n  };\n  return FoldingRangeAdapter;\n}();\nexport { FoldingRangeAdapter };\nfunction toFoldingRangeKind(kind) {\n  switch (kind) {\n    case ls.FoldingRangeKind.Comment:\n      return monaco.languages.FoldingRangeKind.Comment;\n    case ls.FoldingRangeKind.Imports:\n      return monaco.languages.FoldingRangeKind.Imports;\n    case ls.FoldingRangeKind.Region:\n      return monaco.languages.FoldingRangeKind.Region;\n  }\n  return void 0;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport function createScanner(text, ignoreTrivia) {\n  if (ignoreTrivia === void 0) {\n    ignoreTrivia = false;\n  }\n  var pos = 0,\n    len = text.length,\n    value = '',\n    tokenOffset = 0,\n    token = 16 /* Unknown */,\n    scanError = 0 /* None */;\n  function scanHexDigits(count, exact) {\n    var digits = 0;\n    var value = 0;\n    while (digits < count || !exact) {\n      var ch = text.charCodeAt(pos);\n      if (ch >= 48 /* _0 */ && ch <= 57 /* _9 */) {\n        value = value * 16 + ch - 48 /* _0 */;\n      } else if (ch >= 65 /* A */ && ch <= 70 /* F */) {\n        value = value * 16 + ch - 65 /* A */ + 10;\n      } else if (ch >= 97 /* a */ && ch <= 102 /* f */) {\n        value = value * 16 + ch - 97 /* a */ + 10;\n      } else {\n        break;\n      }\n      pos++;\n      digits++;\n    }\n    if (digits < count) {\n      value = -1;\n    }\n    return value;\n  }\n  function setPosition(newPosition) {\n    pos = newPosition;\n    value = '';\n    tokenOffset = 0;\n    token = 16 /* Unknown */;\n    scanError = 0 /* None */;\n  }\n\n  function scanNumber() {\n    var start = pos;\n    if (text.charCodeAt(pos) === 48 /* _0 */) {\n      pos++;\n    } else {\n      pos++;\n      while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n        pos++;\n      }\n    }\n    if (pos < text.length && text.charCodeAt(pos) === 46 /* dot */) {\n      pos++;\n      if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n        pos++;\n        while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n          pos++;\n        }\n      } else {\n        scanError = 3 /* UnexpectedEndOfNumber */;\n        return text.substring(start, pos);\n      }\n    }\n    var end = pos;\n    if (pos < text.length && (text.charCodeAt(pos) === 69 /* E */ || text.charCodeAt(pos) === 101 /* e */)) {\n      pos++;\n      if (pos < text.length && text.charCodeAt(pos) === 43 /* plus */ || text.charCodeAt(pos) === 45 /* minus */) {\n        pos++;\n      }\n      if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n        pos++;\n        while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n          pos++;\n        }\n        end = pos;\n      } else {\n        scanError = 3 /* UnexpectedEndOfNumber */;\n      }\n    }\n\n    return text.substring(start, end);\n  }\n  function scanString() {\n    var result = '',\n      start = pos;\n    while (true) {\n      if (pos >= len) {\n        result += text.substring(start, pos);\n        scanError = 2 /* UnexpectedEndOfString */;\n        break;\n      }\n      var ch = text.charCodeAt(pos);\n      if (ch === 34 /* doubleQuote */) {\n        result += text.substring(start, pos);\n        pos++;\n        break;\n      }\n      if (ch === 92 /* backslash */) {\n        result += text.substring(start, pos);\n        pos++;\n        if (pos >= len) {\n          scanError = 2 /* UnexpectedEndOfString */;\n          break;\n        }\n        ch = text.charCodeAt(pos++);\n        switch (ch) {\n          case 34 /* doubleQuote */:\n            result += '\\\"';\n            break;\n          case 92 /* backslash */:\n            result += '\\\\';\n            break;\n          case 47 /* slash */:\n            result += '/';\n            break;\n          case 98 /* b */:\n            result += '\\b';\n            break;\n          case 102 /* f */:\n            result += '\\f';\n            break;\n          case 110 /* n */:\n            result += '\\n';\n            break;\n          case 114 /* r */:\n            result += '\\r';\n            break;\n          case 116 /* t */:\n            result += '\\t';\n            break;\n          case 117 /* u */:\n            var ch_1 = scanHexDigits(4, true);\n            if (ch_1 >= 0) {\n              result += String.fromCharCode(ch_1);\n            } else {\n              scanError = 4 /* InvalidUnicode */;\n            }\n\n            break;\n          default:\n            scanError = 5 /* InvalidEscapeCharacter */;\n        }\n\n        start = pos;\n        continue;\n      }\n      if (ch >= 0 && ch <= 0x1f) {\n        if (isLineBreak(ch)) {\n          result += text.substring(start, pos);\n          scanError = 2 /* UnexpectedEndOfString */;\n          break;\n        } else {\n          scanError = 6 /* InvalidCharacter */;\n          // mark as error but continue with string\n        }\n      }\n\n      pos++;\n    }\n    return result;\n  }\n  function scanNext() {\n    value = '';\n    scanError = 0 /* None */;\n    tokenOffset = pos;\n    if (pos >= len) {\n      // at the end\n      tokenOffset = len;\n      return token = 17 /* EOF */;\n    }\n\n    var code = text.charCodeAt(pos);\n    // trivia: whitespace\n    if (isWhiteSpace(code)) {\n      do {\n        pos++;\n        value += String.fromCharCode(code);\n        code = text.charCodeAt(pos);\n      } while (isWhiteSpace(code));\n      return token = 15 /* Trivia */;\n    }\n    // trivia: newlines\n    if (isLineBreak(code)) {\n      pos++;\n      value += String.fromCharCode(code);\n      if (code === 13 /* carriageReturn */ && text.charCodeAt(pos) === 10 /* lineFeed */) {\n        pos++;\n        value += '\\n';\n      }\n      return token = 14 /* LineBreakTrivia */;\n    }\n\n    switch (code) {\n      // tokens: []{}:,\n      case 123 /* openBrace */:\n        pos++;\n        return token = 1 /* OpenBraceToken */;\n      case 125 /* closeBrace */:\n        pos++;\n        return token = 2 /* CloseBraceToken */;\n      case 91 /* openBracket */:\n        pos++;\n        return token = 3 /* OpenBracketToken */;\n      case 93 /* closeBracket */:\n        pos++;\n        return token = 4 /* CloseBracketToken */;\n      case 58 /* colon */:\n        pos++;\n        return token = 6 /* ColonToken */;\n      case 44 /* comma */:\n        pos++;\n        return token = 5 /* CommaToken */;\n      // strings\n      case 34 /* doubleQuote */:\n        pos++;\n        value = scanString();\n        return token = 10 /* StringLiteral */;\n      // comments\n      case 47 /* slash */:\n        var start = pos - 1;\n        // Single-line comment\n        if (text.charCodeAt(pos + 1) === 47 /* slash */) {\n          pos += 2;\n          while (pos < len) {\n            if (isLineBreak(text.charCodeAt(pos))) {\n              break;\n            }\n            pos++;\n          }\n          value = text.substring(start, pos);\n          return token = 12 /* LineCommentTrivia */;\n        }\n        // Multi-line comment\n        if (text.charCodeAt(pos + 1) === 42 /* asterisk */) {\n          pos += 2;\n          var commentClosed = false;\n          while (pos < len) {\n            var ch = text.charCodeAt(pos);\n            if (ch === 42 /* asterisk */ && pos + 1 < len && text.charCodeAt(pos + 1) === 47 /* slash */) {\n              pos += 2;\n              commentClosed = true;\n              break;\n            }\n            pos++;\n          }\n          if (!commentClosed) {\n            pos++;\n            scanError = 1 /* UnexpectedEndOfComment */;\n          }\n\n          value = text.substring(start, pos);\n          return token = 13 /* BlockCommentTrivia */;\n        }\n        // just a single slash\n        value += String.fromCharCode(code);\n        pos++;\n        return token = 16 /* Unknown */;\n      // numbers\n      case 45 /* minus */:\n        value += String.fromCharCode(code);\n        pos++;\n        if (pos === len || !isDigit(text.charCodeAt(pos))) {\n          return token = 16 /* Unknown */;\n        }\n      // found a minus, followed by a number so\n      // we fall through to proceed with scanning\n      // numbers\n      case 48 /* _0 */:\n      case 49 /* _1 */:\n      case 50 /* _2 */:\n      case 51 /* _3 */:\n      case 52 /* _4 */:\n      case 53 /* _5 */:\n      case 54 /* _6 */:\n      case 55 /* _7 */:\n      case 56 /* _8 */:\n      case 57 /* _9 */:\n        value += scanNumber();\n        return token = 11 /* NumericLiteral */;\n      // literals and unknown symbols\n      default:\n        // is a literal? Read the full word.\n        while (pos < len && isUnknownContentCharacter(code)) {\n          pos++;\n          code = text.charCodeAt(pos);\n        }\n        if (tokenOffset !== pos) {\n          value = text.substring(tokenOffset, pos);\n          // keywords: true, false, null\n          switch (value) {\n            case 'true':\n              return token = 8 /* TrueKeyword */;\n            case 'false':\n              return token = 9 /* FalseKeyword */;\n            case 'null':\n              return token = 7 /* NullKeyword */;\n          }\n\n          return token = 16 /* Unknown */;\n        }\n        // some\n        value += String.fromCharCode(code);\n        pos++;\n        return token = 16 /* Unknown */;\n    }\n  }\n\n  function isUnknownContentCharacter(code) {\n    if (isWhiteSpace(code) || isLineBreak(code)) {\n      return false;\n    }\n    switch (code) {\n      case 125 /* closeBrace */:\n      case 93 /* closeBracket */:\n      case 123 /* openBrace */:\n      case 91 /* openBracket */:\n      case 34 /* doubleQuote */:\n      case 58 /* colon */:\n      case 44 /* comma */:\n      case 47 /* slash */:\n        return false;\n    }\n    return true;\n  }\n  function scanNextNonTrivia() {\n    var result;\n    do {\n      result = scanNext();\n    } while (result >= 12 /* LineCommentTrivia */ && result <= 15 /* Trivia */);\n    return result;\n  }\n  return {\n    setPosition: setPosition,\n    getPosition: function getPosition() {\n      return pos;\n    },\n    scan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n    getToken: function getToken() {\n      return token;\n    },\n    getTokenValue: function getTokenValue() {\n      return value;\n    },\n    getTokenOffset: function getTokenOffset() {\n      return tokenOffset;\n    },\n    getTokenLength: function getTokenLength() {\n      return pos - tokenOffset;\n    },\n    getTokenError: function getTokenError() {\n      return scanError;\n    }\n  };\n}\nfunction isWhiteSpace(ch) {\n  return ch === 32 /* space */ || ch === 9 /* tab */ || ch === 11 /* verticalTab */ || ch === 12 /* formFeed */ || ch === 160 /* nonBreakingSpace */ || ch === 5760 /* ogham */ || ch >= 8192 /* enQuad */ && ch <= 8203 /* zeroWidthSpace */ || ch === 8239 /* narrowNoBreakSpace */ || ch === 8287 /* mathematicalSpace */ || ch === 12288 /* ideographicSpace */ || ch === 65279 /* byteOrderMark */;\n}\n\nfunction isLineBreak(ch) {\n  return ch === 10 /* lineFeed */ || ch === 13 /* carriageReturn */ || ch === 8232 /* lineSeparator */ || ch === 8233 /* paragraphSeparator */;\n}\n\nfunction isDigit(ch) {\n  return ch >= 48 /* _0 */ && ch <= 57 /* _9 */;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as formatter from './impl/format.js';\nimport * as edit from './impl/edit.js';\nimport * as scanner from './impl/scanner.js';\nimport * as parser from './impl/parser.js';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport var createScanner = scanner.createScanner;\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport var getLocation = parser.getLocation;\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport var parse = parser.parse;\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport var parseTree = parser.parseTree;\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport var findNodeAtLocation = parser.findNodeAtLocation;\n/**\n * Finds the most inner node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport var findNodeAtOffset = parser.findNodeAtOffset;\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport var getNodePath = parser.getNodePath;\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport var getNodeValue = parser.getNodeValue;\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport var visit = parser.visit;\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport var stripComments = parser.stripComments;\n/**\n * Computes the edits needed to format a JSON document.\n *\n * @param documentText The input text\n * @param range The range to format or `undefined` to format the full content\n * @param options The formatting options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`\n */\nexport function format(documentText, range, options) {\n  return formatter.format(documentText, range, options);\n}\n/**\n * Computes the edits needed to modify a value in the JSON document.\n *\n * @param documentText The input text\n * @param path The path of the value to change. The path represents either to the document root, a property or an array item.\n * If the path points to an non-existing property or item, it will be created.\n * @param value The new value for the specified property or item. If the value is undefined,\n * the property or item will be removed.\n * @param options Options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`\n */\nexport function modify(text, path, value, options) {\n  return edit.setProperty(text, path, value, options.formattingOptions, options.getInsertionIndex);\n}\n/**\n * Applies edits to a input string.\n */\nexport function applyEdits(text, edits) {\n  for (var i = edits.length - 1; i >= 0; i--) {\n    text = edit.applyEdit(text, edits[i]);\n  }\n  return text;\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as json from './_deps/jsonc-parser/main.js';\nexport function createTokenizationSupport(supportComments) {\n  return {\n    getInitialState: function getInitialState() {\n      return new JSONState(null, null, false);\n    },\n    tokenize: function tokenize(line, state, offsetDelta, stopAtOffset) {\n      return _tokenize(supportComments, line, state, offsetDelta, stopAtOffset);\n    }\n  };\n}\nexport var TOKEN_DELIM_OBJECT = 'delimiter.bracket.json';\nexport var TOKEN_DELIM_ARRAY = 'delimiter.array.json';\nexport var TOKEN_DELIM_COLON = 'delimiter.colon.json';\nexport var TOKEN_DELIM_COMMA = 'delimiter.comma.json';\nexport var TOKEN_VALUE_BOOLEAN = 'keyword.json';\nexport var TOKEN_VALUE_NULL = 'keyword.json';\nexport var TOKEN_VALUE_STRING = 'string.value.json';\nexport var TOKEN_VALUE_NUMBER = 'number.json';\nexport var TOKEN_PROPERTY_NAME = 'string.key.json';\nexport var TOKEN_COMMENT_BLOCK = 'comment.block.json';\nexport var TOKEN_COMMENT_LINE = 'comment.line.json';\nvar JSONState = /** @class */function () {\n  function JSONState(state, scanError, lastWasColon) {\n    this._state = state;\n    this.scanError = scanError;\n    this.lastWasColon = lastWasColon;\n  }\n  JSONState.prototype.clone = function () {\n    return new JSONState(this._state, this.scanError, this.lastWasColon);\n  };\n  JSONState.prototype.equals = function (other) {\n    if (other === this) {\n      return true;\n    }\n    if (!other || !(other instanceof JSONState)) {\n      return false;\n    }\n    return this.scanError === other.scanError && this.lastWasColon === other.lastWasColon;\n  };\n  JSONState.prototype.getStateData = function () {\n    return this._state;\n  };\n  JSONState.prototype.setStateData = function (state) {\n    this._state = state;\n  };\n  return JSONState;\n}();\nfunction _tokenize(comments, line, state, offsetDelta, stopAtOffset) {\n  if (offsetDelta === void 0) {\n    offsetDelta = 0;\n  }\n  // handle multiline strings and block comments\n  var numberOfInsertedCharacters = 0,\n    adjustOffset = false;\n  switch (state.scanError) {\n    case 2 /* UnexpectedEndOfString */:\n      line = '\"' + line;\n      numberOfInsertedCharacters = 1;\n      break;\n    case 1 /* UnexpectedEndOfComment */:\n      line = '/*' + line;\n      numberOfInsertedCharacters = 2;\n      break;\n  }\n  var scanner = json.createScanner(line),\n    kind,\n    ret,\n    lastWasColon = state.lastWasColon;\n  ret = {\n    tokens: [],\n    endState: state.clone()\n  };\n  while (true) {\n    var offset = offsetDelta + scanner.getPosition(),\n      type = '';\n    kind = scanner.scan();\n    if (kind === 17 /* EOF */) {\n      break;\n    }\n    // Check that the scanner has advanced\n    if (offset === offsetDelta + scanner.getPosition()) {\n      throw new Error('Scanner did not advance, next 3 characters are: ' + line.substr(scanner.getPosition(), 3));\n    }\n    // In case we inserted /* or \" character, we need to\n    // adjust the offset of all tokens (except the first)\n    if (adjustOffset) {\n      offset -= numberOfInsertedCharacters;\n    }\n    adjustOffset = numberOfInsertedCharacters > 0;\n    // brackets and type\n    switch (kind) {\n      case 1 /* OpenBraceToken */:\n        type = TOKEN_DELIM_OBJECT;\n        lastWasColon = false;\n        break;\n      case 2 /* CloseBraceToken */:\n        type = TOKEN_DELIM_OBJECT;\n        lastWasColon = false;\n        break;\n      case 3 /* OpenBracketToken */:\n        type = TOKEN_DELIM_ARRAY;\n        lastWasColon = false;\n        break;\n      case 4 /* CloseBracketToken */:\n        type = TOKEN_DELIM_ARRAY;\n        lastWasColon = false;\n        break;\n      case 6 /* ColonToken */:\n        type = TOKEN_DELIM_COLON;\n        lastWasColon = true;\n        break;\n      case 5 /* CommaToken */:\n        type = TOKEN_DELIM_COMMA;\n        lastWasColon = false;\n        break;\n      case 8 /* TrueKeyword */:\n      case 9 /* FalseKeyword */:\n        type = TOKEN_VALUE_BOOLEAN;\n        lastWasColon = false;\n        break;\n      case 7 /* NullKeyword */:\n        type = TOKEN_VALUE_NULL;\n        lastWasColon = false;\n        break;\n      case 10 /* StringLiteral */:\n        type = lastWasColon ? TOKEN_VALUE_STRING : TOKEN_PROPERTY_NAME;\n        lastWasColon = false;\n        break;\n      case 11 /* NumericLiteral */:\n        type = TOKEN_VALUE_NUMBER;\n        lastWasColon = false;\n        break;\n    }\n    // comments, iff enabled\n    if (comments) {\n      switch (kind) {\n        case 12 /* LineCommentTrivia */:\n          type = TOKEN_COMMENT_LINE;\n          break;\n        case 13 /* BlockCommentTrivia */:\n          type = TOKEN_COMMENT_BLOCK;\n          break;\n      }\n    }\n    ret.endState = new JSONState(state.getStateData(), scanner.getTokenError(), lastWasColon);\n    ret.tokens.push({\n      startIndex: offset,\n      scopes: type\n    });\n  }\n  return ret;\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport { WorkerManager } from './workerManager.js';\nimport * as languageFeatures from './languageFeatures.js';\nimport { createTokenizationSupport } from './tokenization.js';\nexport function setupMode(defaults) {\n  var disposables = [];\n  var client = new WorkerManager(defaults);\n  disposables.push(client);\n  var worker = function worker() {\n    var uris = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      uris[_i] = arguments[_i];\n    }\n    return client.getLanguageServiceWorker.apply(client, uris);\n  };\n  var languageId = defaults.languageId;\n  disposables.push(monaco.languages.registerCompletionItemProvider(languageId, new languageFeatures.CompletionAdapter(worker)));\n  disposables.push(monaco.languages.registerHoverProvider(languageId, new languageFeatures.HoverAdapter(worker)));\n  disposables.push(monaco.languages.registerDocumentSymbolProvider(languageId, new languageFeatures.DocumentSymbolAdapter(worker)));\n  disposables.push(monaco.languages.registerDocumentFormattingEditProvider(languageId, new languageFeatures.DocumentFormattingEditProvider(worker)));\n  disposables.push(monaco.languages.registerDocumentRangeFormattingEditProvider(languageId, new languageFeatures.DocumentRangeFormattingEditProvider(worker)));\n  disposables.push(new languageFeatures.DiagnosticsAdapter(languageId, worker, defaults));\n  disposables.push(monaco.languages.setTokensProvider(languageId, createTokenizationSupport(true)));\n  disposables.push(monaco.languages.setLanguageConfiguration(languageId, richEditConfiguration));\n  disposables.push(monaco.languages.registerColorProvider(languageId, new languageFeatures.DocumentColorAdapter(worker)));\n  disposables.push(monaco.languages.registerFoldingRangeProvider(languageId, new languageFeatures.FoldingRangeAdapter(worker)));\n}\nvar richEditConfiguration = {\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\[\\{\\]\\}\\:\\\"\\,\\s]+)/g,\n  comments: {\n    lineComment: '//',\n    blockComment: ['/*', '*/']\n  },\n  brackets: [['{', '}'], ['[', ']']],\n  autoClosingPairs: [{\n    open: '{',\n    close: '}',\n    notIn: ['string']\n  }, {\n    open: '[',\n    close: ']',\n    notIn: ['string']\n  }, {\n    open: '\"',\n    close: '\"',\n    notIn: ['string']\n  }]\n};"],"sourceRoot":""}